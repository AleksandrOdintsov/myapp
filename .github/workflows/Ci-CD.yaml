name: CI/CD

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  update-index:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Update index.html with version and tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF##*/}
          echo "<html><body><h1>Version: $TAG</h1></body></html>" > index.html
          git add index.html
          git commit -m "Update index.html with version: $TAG"
          git push git@github.com:${{ github.repository }}.git HEAD:main

      - name: Update index.html with commit
        if: github.ref == 'refs/heads/main'
        run: |
          echo "<html><body><h1>Version: $GITHUB_SHA</h1></body></html>" > index.html
          git add index.html
          git commit -m "Update index.html with version: $GITHUB_SHA"
          git push git@github.com:${{ github.repository }}.git HEAD:main

  build:
    needs: update-index
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            docker.io/aleksandrodintsov/nginx:${{ github.sha }}
            docker.io/aleksandrodintsov/nginx:${{ github.ref_name }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: "latest" #

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Deploy with Helm
        run: |
          helm upgrade --install myapp ./ -f ./values.yaml
